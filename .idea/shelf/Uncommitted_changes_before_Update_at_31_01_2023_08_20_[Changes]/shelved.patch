Index: djangoProject/app/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render,redirect\r\nfrom django.http import HttpResponse\r\nfrom .models import Produto\r\nfrom .forms import ProdutoForm\r\n# Create your views here.\r\ndef inicio(request):\r\n    return render(request,'inicio.html')\r\n\r\ndef cadastro(request):\r\n    form = ProdutoForm(request.POST or None)\r\n\r\n    if form.is_valid():\r\n        form.save()\r\n        return redirect('lista')\r\n    return render(request,'cadastro.html', {'form':form})\r\n\r\n\r\n\r\ndef lista(request):\r\n    preco = request.POST.get('preco')\r\n\r\n    lista = Produto.objects.all()\r\n    dados = {'lista': lista, 'preco': preco}\r\n    return render(request, 'lista.html', dados)\r\n\r\ndef update_lista(request, id):\r\n    lista = Produto.objects.get(id=id)\r\n    form = ProdutoForm(request.POST or None, instance=lista)\r\n\r\n    if form.is_valid():\r\n        form.save()\r\n        return redirect('lista')\r\n    return render(request, 'cadastro.html', {'lista': lista, 'form':form})\r\n\r\ndef delete_id_lista(request, id):\r\n    lista = Produto.objects.get(id=id)\r\n\r\n    if request.method == 'POST':\r\n        lista.delete()\r\n        return redirect('lista')\r\n    return render(request, 'cadastro.html')\r\n\r\ndef delete_lista(request):\r\n    lista = Produto.objects.all()\r\n\r\n    if request.method == 'POST':\r\n        lista.delete()\r\n        return redirect('lista')\r\n    return render(request, 'cadastro.html')\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject/app/views.py b/djangoProject/app/views.py
--- a/djangoProject/app/views.py	(revision 7eef0f66d0151baeb3edb3828b2ef24e7faff25a)
+++ b/djangoProject/app/views.py	(date 1675163639574)
@@ -20,7 +20,7 @@
     preco = request.POST.get('preco')
 
     lista = Produto.objects.all()
-    dados = {'lista': lista, 'preco': preco}
+    dados = {'lista': lista}
     return render(request, 'lista.html', dados)
 
 def update_lista(request, id):
Index: djangoProject/app/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\r\nfrom .models import Produto\r\n# Register your models here.\r\n\r\nclass ProdutoAdmin(admin.ModelAdmin):\r\n    list_display = ('produto')\r\nadmin.site.register(Produto)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject/app/admin.py b/djangoProject/app/admin.py
--- a/djangoProject/app/admin.py	(revision 7eef0f66d0151baeb3edb3828b2ef24e7faff25a)
+++ b/djangoProject/app/admin.py	(date 1675163852717)
@@ -3,5 +3,5 @@
 # Register your models here.
 
 class ProdutoAdmin(admin.ModelAdmin):
-    list_display = ('produto')
-admin.site.register(Produto)
\ No newline at end of file
+    list_display = ('produto', 'valor')
+admin.site.register(Produto, ProdutoAdmin)
\ No newline at end of file
Index: djangoProject/app/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\n\r\n# Create your models here.\r\nclass Produto(models.Model):\r\n    produto = models.CharField(max_length=100, verbose_name='Produto')\r\n\r\n    class Meta:\r\n        db_table = 'produto'\r\n\r\n    def __str__(self):\r\n       return self.produto
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject/app/models.py b/djangoProject/app/models.py
--- a/djangoProject/app/models.py	(revision 7eef0f66d0151baeb3edb3828b2ef24e7faff25a)
+++ b/djangoProject/app/models.py	(date 1675163722952)
@@ -3,7 +3,7 @@
 # Create your models here.
 class Produto(models.Model):
     produto = models.CharField(max_length=100, verbose_name='Produto')
-
+    valor = models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Valor')
     class Meta:
         db_table = 'produto'
 
Index: djangoProject/app/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/djangoProject/app/migrations/0001_initial.py b/djangoProject/app/migrations/0001_initial.py
deleted file mode 100644
--- a/djangoProject/app/migrations/0001_initial.py	(revision 7eef0f66d0151baeb3edb3828b2ef24e7faff25a)
+++ /dev/null	(revision 7eef0f66d0151baeb3edb3828b2ef24e7faff25a)
@@ -1,24 +0,0 @@
-# Generated by Django 4.1.5 on 2023-01-18 13:56
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Produto',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('produto', models.CharField(max_length=100, verbose_name='Produto')),
-            ],
-            options={
-                'db_table': 'produto',
-            },
-        ),
-    ]
